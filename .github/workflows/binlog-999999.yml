name: Test binlog 999999

on:
  push:
    branches:
      - master
      - release-2.0
  pull_request:
    branches:
      - master
      - release-2.0

jobs:
  test-binlog-999999:
    name: upstream-database-switch
    runs-on: ubuntu-18.04

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-dm-${{ hashFiles('**/go.sum') }}

      - name: Cache tools
        uses: actions/cache@v2
        with:
          path: |
            **/tools
          key: ${{ runner.os }}-dm-tools-${{ hashFiles('**/tools/go.sum') }}

      - name: Build DM binary
        run: make dm_integration_test_build

      - name: Setup containers
        run: |
          docker-compose -f ./tests/binlog_999999/docker-compose.yml up -d

      - name: change binlog sequence number to 999998
        run: |
          echo "reset master;" | mysql -h mysql1 -P 3306 -p 123456
          echo "reset master;" | mysql -h mysql2 -P 3306 -p 123456
          docker-compose down
          mv /tmp/mysql1-data/mysql-bin.000001 /tmp/mysql1-data/mysql-bin.999998
          echo "./mysql-bin.999998" > /tmp/mysql1-data/mysql-bin.index
          mv /tmp/mysql2-data/mysql-bin.000001 /tmp/mysql2-data/mysql-bin.999998
          echo "./mysql-bin.999998" > /tmp/mysql2-data/mysql-bin.index
          docker-compose -f ./tests/binlog_999999/docker-compose.yml up -d

      - name: Run test cases
        run: |
          make integration_test CASE=incremental_mode

      - name: Copy logs to hack permission
        if: ${{ always() }}
        run: |
          mkdir ./logs
          sudo cp -r -L /tmp/dm_test/upstream_switch/master/log ./logs/master
          sudo cp -r -L /tmp/dm_test/upstream_switch/worker1/log ./logs/worker1
          sudo cp -r -L /tmp/dm_test/upstream_switch/worker2/log ./logs/worker2
          sudo chown -R runner ./logs

      # Update logs as artifact seems not stable, so we set `continue-on-error: true` here.
      - name: Upload logs
        continue-on-error: true
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: upstream-switch-logs
          path: |
            ./logs

      # send Slack notify if failed.
      # NOTE: With the exception of `GITHUB_TOKEN`, secrets are not passed to the runner when a workflow is triggered from a forked repository.
      - name: Slack notification
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFY }}
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: "upstream-switch job failed, see https://github.com/pingcap/dm/actions/runs/{{ GITHUB_RUN_ID }}"

      # Debug via SSH if previous steps failed
      - name: Set up tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v2